<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<description>Example configuration to get you started.</description>

	<beans profile="dev">
		<context:component-scan base-package="com.vidlib.service" />

		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName">
				<value>${jdbc.driverClassName}</value>
			</property>
			<property name="url">
				<value>${jdbc.url}</value>
			</property>
			<property name="username">
				<value>${jdbc.username}</value>
			</property>
			<property name="password">
				<value>${jdbc.password}</value>
			</property>
		</bean>


		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<property name="entityManagerFactory" ref="emf" />
		</bean>

		<tx:annotation-driven transaction-manager="transactionManager" />


		<bean id="emf"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="packagesToScan" value="com.vidlib.domain" />
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">
						org.hibernate.dialect.MySQLDialect
					</prop>
					<prop key="hibernate.max_fetch_depth">3</prop>
					<prop key="hibernate.jdbc.fetch_size">50</prop>
					<prop key="hibernate.jdbc.batch_size">10</prop>
					<prop key="hibernate.show_sql">true</prop>
				</props>
			</property>
		</bean>

		<context:property-placeholder location="classpath:jdbc.test_properties" />

		<jpa:repositories base-package="com.vidlib.service.repository"
			entity-manager-factory-ref="emf" transaction-manager-ref="transactionManager" />


	</beans>

	<beans profile="test">


		<!-- ========================= DATASOURCE DEFINITION ========================= -->

		<!-- Configurer that replaces ${...} placeholders with values from a properties 
			file -->
		<!-- (in this case, JDBC-related settings for the dataSource definition 
			below) -->
		<context:property-placeholder
			location="classpath:spring/data-access.properties"
			system-properties-mode="OVERRIDE" />

		<!-- DataSource configuration for the tomcat jdbc connection pool See here 
			for more details on commons-dbcp versus tomcat-jdbc: http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/ -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
			p:username="${jdbc.username}" p:password="${jdbc.password}" />

		<!-- Database initializer. If any of the script fails, the initialization 
			stops. -->
		<!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="${jdbc.initLocation}" />
			<!-- <jdbc:script location="${jdbc.dataLocation}"/> -->
		</jdbc:initialize-database>

		<context:component-scan base-package="com.vidlib.service" />

		<!-- <jdbc:embedded-database id="dataSource" type="H2"> -->
		<!-- <jdbc:script location="classpath:schema.sql"/> -->
		<!-- <jdbc:script location="classpath:test-data.sql"/> -->
		<!-- </jdbc:embedded-database> -->
		<!-- <bean id="dbDataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
			<property name="jndiName" value="java:comp/env/jdbc/mydb"/> </bean> -->
		<jee:jndi-lookup id="dataSource" jndi-name="jdbc/test_vidlibdata"
			resource-ref="true" />

		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<property name="entityManagerFactory" ref="emf" />
		</bean>

		<tx:annotation-driven transaction-manager="transactionManager" />

		<!-- JPA EntityManagerFactory -->
		<bean id="emf"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
			p:dataSource-ref="dataSource">
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
					p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
			</property>
			<!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, 
				persistenceUnit will win -->
			<property name="packagesToScan" value="com.vidlib.domain" />
			<property name="jpaProperties">
				<props>
					<!-- <prop key="hibernate.dialect"> org.hibernate.dialect.H2Dialect 
						</prop> -->
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<prop key="hibernate.max_fetch_depth">3</prop>
					<prop key="hibernate.jdbc.fetch_size">50</prop>
					<prop key="hibernate.jdbc.batch_size">10</prop>
					<prop key="hibernate.show_sql">true</prop>
				</props>
			</property>
		</bean>

<!--  
		<bean id="emf"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="packagesToScan" value="com.vidlib.domain" />
			<property name="jpaProperties">
				<props>
				 -->
					<!-- <prop key="hibernate.dialect"> org.hibernate.dialect.H2Dialect 
						</prop> -->
					<!-- 
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
					<prop key="hibernate.max_fetch_depth">3</prop>
					<prop key="hibernate.jdbc.fetch_size">50</prop>
					<prop key="hibernate.jdbc.batch_size">10</prop>
					<prop key="hibernate.show_sql">true</prop>
				</props>
			</property>
		</bean>
  -->
		<!--<context:property-placeholder location="classpath:jdbc.properties" 
			/> -->
	</beans>

</beans>
